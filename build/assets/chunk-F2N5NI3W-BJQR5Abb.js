import{X as a,p as n,Y as u}from"./index-7A3rjJyE.js";var c="workflow_executions",s=u(c),T=(e,t)=>{const{data:r,...o}=a({queryFn:()=>n.workflowExecutions.list(e),queryKey:s.list(e),...t});return{...r,...o}},l=(e,t,r)=>{const{data:o,...i}=a({queryFn:()=>n.workflowExecutions.retrieve(e,t),queryKey:s.detail(e),...r});return{...o,...i}},_=["compensating","invoking"],d=["skipped","skipped_failure"],f=["done"],v=["failed","reverted","timeout","dormant"],k=["not_started"],E=["failed","reverted"],S=["invoking","waiting_to_compensate","compensating"],g=e=>{let t="green";return E.includes(e)&&(t="red"),S.includes(e)&&(t="orange"),t},p=(e,t)=>{switch(t){case"done":return e("workflowExecutions.state.done");case"failed":return e("workflowExecutions.state.failed");case"reverted":return e("workflowExecutions.state.reverted");case"invoking":return e("workflowExecutions.state.invoking");case"waiting_to_compensate":return e("workflowExecutions.transaction.state.waitingToCompensate");case"compensating":return e("workflowExecutions.state.compensating");case"not_started":return e("workflowExecutions.state.notStarted")}};export{d as S,p as a,l as b,f as c,_ as d,v as e,k as f,g,T as u};
